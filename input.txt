<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendar</title>
    <style>
        body {
            font-family: sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }

        .calendar-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            width: 400px;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .calendar-header button {
            background: none;
            border: none;
            font-size: 1.5em;
            cursor: pointer;
            padding: 5px;
        }
        .calendar-header h2 {
            margin: 0 10px;
            font-size: 1.5em;
        }


        .weekdays {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            text-align: center;
            font-weight: bold;
            margin-bottom: 10px;
        }
        .weekdays div {
          padding: 5px 0;
        }

        .days {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            grid-gap: 5px;
        }

        .day {
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #4caf50;
            border-radius: 5px;
            height: 40px;
            cursor: pointer;
            transition: background-color 0.3s ease;
             position: relative;
        }

        .day:hover {
            background-color: #d0d0d0;
        }
        .day.selected {
            background-color: #e6e6e6de;
            color: white;
        }
          .day.red{
               background-color: red;
               color: white;
          }
           .day.other-month {
            color: #888;
        }
        .day button {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: transparent;
            border: none;
            cursor: pointer;
             font-size: 12px;
        }
        .day.blue {
               background-color: blue;
               color: white;
          }
    </style>
</head>
<body>
    <div class="calendar-container">
        <div class="calendar-header">
            <button id="prev-month">&lt;</button>
            <h2 id="current-month-year"></h2>
            <button id="next-month">&gt;</button>
        </div>
        <div class="calendar-body">
            <div class="weekdays">
                <div>–ü–Ω</div>
                <div>–í—Ç</div>
                <div>–°—Ä</div>
                <div>–ß—Ç</div>
                <div>–ü—Ç</div>
                <div>–°–±</div>
                <div>–í—Å</div>
            </div>
            <div class="days" id="days-container">
            </div>
        </div>
    </div>
    <script>
        const prevMonthBtn = document.getElementById('prev-month');
        const nextMonthBtn = document.getElementById('next-month');
        const currentMonthYear = document.getElementById('current-month-year');
        const daysContainer = document.getElementById('days-container');

        let currentDate = new Date();
        const coloredDates = JSON.parse(localStorage.getItem('coloredDates')) || {};
 
        function generateCalendar() {
             const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
            const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
            const firstDayOfWeek = firstDay.getDay() === 0 ? 7 : firstDay.getDay(); // 1 (Monday) to 7 (Sunday)
            const totalDays = lastDay.getDate();
            const prevMonthLastDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0).getDate();


            currentMonthYear.textContent = `${currentDate.toLocaleString('default', { month: 'long' })} ${currentDate.getFullYear()}`;
            daysContainer.innerHTML = '';

            let dayCounter = 1;
            let prevMonthDayCounter = prevMonthLastDay - firstDayOfWeek + 2;

            for (let i = 1; i <= 42; i++) {
               const dayDiv = document.createElement('div');
                dayDiv.classList.add('day');
               if(i < firstDayOfWeek){
                     dayDiv.classList.add('other-month');
                  dayDiv.textContent = prevMonthDayCounter++;
               }else if (dayCounter <= totalDays) {
                 dayDiv.textContent = dayCounter;
                   const dayKey = `${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${dayCounter}`;
                        if (coloredDates[dayKey] === 'red') {
                            dayDiv.classList.add('red');
                        }
                  const button = document.createElement('button');
                    button.textContent = 'üî¥';
                  button.style.display = 'none'
                     dayDiv.appendChild(button);
                    button.addEventListener('click', (e) => {
                            e.stopPropagation();
                            if(dayDiv.classList.contains('red')){
                                 dayDiv.classList.remove('red');
                                coloredDates[dayKey] = '';
                            }else{
                                dayDiv.classList.add('red');
                                coloredDates[dayKey] = 'red';
                            }
                               localStorage.setItem('coloredDates', JSON.stringify(coloredDates));
                        });


                    dayDiv.addEventListener('click', () => {
                         document.querySelectorAll('.day').forEach(day => {
                            day.classList.remove('selected');
                           const but = day.querySelector('button');
                                 if(but) {
                                     but.style.display = 'none';
                                  }
                         })

                         dayDiv.classList.add('selected');
                        button.style.display = 'block';

                     });
                dayCounter++;
                } else{
                   dayDiv.classList.add('other-month');
                   dayDiv.textContent =  dayCounter - totalDays;
                   dayCounter++
                }
                daysContainer.appendChild(dayDiv);
            }
        }

        prevMonthBtn.addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() - 1);
            generateCalendar();
        });

        nextMonthBtn.addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() + 1);
            generateCalendar();
        });

        generateCalendar();
        let dayCounter = 1;
let prevMonthDayCounter = prevMonthLastDay - firstDayOfWeek + 2;

    </script>
</body>
</html>